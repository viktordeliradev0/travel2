@using travelingExperience.Data.Enums
@model IEnumerable<travelingExperience.Entity.Travel>

@{
    ViewData["Title"] = "List of Travels";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-nW0ETu/3GrQQPNB2zqWLMX+fcvSgeO3Bo1n4bfPf4yyOz2DXY/+d7RLSyml3wAsqX5B4DZ+YiMdpqS/UzAm7zQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/travelsCSS.css">
</head>
<body>
    <div class="container mt-5">
        <form id="filterForm" class="mb-3">
            <div class="input-group">
                <select class="form-select" id="startDestinationSelect">
                    <option value="">От:</option>
                    @foreach (var value in Enum.GetValues(typeof(TravelDestinations)))
                    {
                        <option value="@value">@value</option>
                    }
                </select>
                <select class="form-select" id="endDestinationSelect">
                    <option value="">До:</option>
                    @foreach (var value in Enum.GetValues(typeof(TravelDestinations)))
                    {
                        <option value="@value">@value</option>
                    }
                </select>
                <select class="form-select" id="dateTime">
                    <option value="">Дата на тръгване:</option>
                    @for (var date = new DateTime(DateTime.Now.Year, 1, 1); date <= new DateTime(DateTime.Now.Year, 12, 31); date = date.AddDays(1))
                    {
                        <option value="@date.ToString("yyyy-MM-dd")">@date.ToString("dd MMM yyyy")</option>
                    }
                </select>

                <button type="button" class="btn btn-primary" id="filterButton" onclick="filterDestinations()">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </form>
        <div id="noResultsMessage" style="display: none;">No matching travels found.</div>

        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-md-4 mb-3">
                    <div class="card">
                        @if (item.TravelPicData != null && !string.IsNullOrEmpty(item.ProfilePictureContentType))
                        {
                            string imageBase64 = Convert.ToBase64String(item.TravelPicData);
                            string imageDataURL = string.Format("data:{0};base64,{1}", item.ProfilePictureContentType, imageBase64);
                            <img src="@imageDataURL" class="card-img-top" alt="Travel Picture">
                        }
                        else
                        {
                            <div class="card-img-top" style="height: 200px; background-color: #f0f0f0;"></div>
                        }

                        <div class="card-body">
                            <h5 class="card-title">From: @item.StartDestination - To: @item.EndDestination</h5>
                            <p class="card-text">Departure Date: @item.StartDate.ToString("dd MMM yy")</p>
                            <p class="card-text">Arrival Date: @item.EndDate.ToString("dd MMM yy")</p>
                            <p class="card-text">Seats Available: @item.Seats</p>
                            <p class="card-text">Price: @item.Price лв</p>
                            <p class="card-text">
                                Status:
                                @if (DateTime.Now >= item.StartDate && DateTime.Now <= item.EndDate && item.AvailableSeats > 0)
                                {
                                    <span class="badge badge-success">AVAILABLE</span>
                                }
                                else if (DateTime.Now > item.EndDate || item.Seats == 0)
                                {
                                    <span class="badge badge-danger">EXPIRED</span>
                                }
                                else
                                {
                                    <span class="badge badge-primary">UPCOMING</span>
                                }
                            </p>
                        </div>

                        <div class="card-footer bg-transparent">
                            <a class="btn btn-outline-primary float-right" asp-action="Info" asp-route-id="@item.Id">
                                <i class="fas fa-info-circle"></i> Show Details
                            </a>
                            <a class="btn btn-success text-white float-left @((DateTime.Now > item.EndDate) ? "disabled" : "")"
                               asp-controller="Travel"
                               asp-action="info"
                               asp-route-id="@item.Id">
                                <i class="fas fa-cart-plus"></i> Add to Liked (Price @item.Price.ToString("c"))
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shCk+XvZtUNv/Z9vToR0skBvV+pFfnD0uHsSc" crossorigin="anonymous"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Handle filter button click
            document.getElementById('filterButton').addEventListener('click', function () {
                filterDestinations();
            });

            function filterDestinations() {
                var startDestination = document.getElementById('startDestinationSelect').value;
                var endDestination = document.getElementById('endDestinationSelect').value;
                var StartDate = document.getElementById('dateTime').value;

                // Redirect to the FilteredTravels action with filter parameters
                window.location.href = '/Travel/FilteredTravels?startDestination=' + startDestination + '&endDestination=' + endDestination +'StartDate' + StartDate;
            }
        });
    </script>
</body>
</html>
